---
kind: pipeline
name: durl
steps:
- name: list files
  image: plugins/git
  commands:
  - git ls-files > list.txt
- name: durl
  image: quay.io/suzuki_shunsuke/durl:1.0.0
  commands:
  - cat list.txt | durl check
---
kind: pipeline
name: shell scripts
clone:
  depth: 1
steps:
- name: shellcheck
  image: koalaman/shellcheck-alpine:v0.7.1
  commands:
  - apk add git
  - sh scripts/shellcheck.sh
- name: shfmt
  image: mvdan/shfmt:v3.1.2-alpine
  commands:
  - 'shfmt -d . env.sh.tmpl'
---
kind: pipeline
name: yamllint
steps:
- name: yamllint
  image: quay.io/suzuki_shunsuke/yamllint:1.23.0
  commands:
  - apk add git
  - sh scripts/yamllint.sh
---
kind: pipeline
name: jsonlint
steps:
- name: jsonlint
  image: cytopia/jsonlint:1.6.0-0.5
  commands:
  - bash scripts/jsonlint.sh
---
kind: pipeline
name: terraform fmt (v0.12)
steps:
- name: terraform fmt (v0.12)
  image: hashicorp/terraform:0.12.24
  commands:
  - terraform fmt -check examples/v0.12
  - terraform fmt -check -recursive graylog/testdata
---
kind: pipeline
name: terraform fmt (v0.11)
steps:
- name: terraform fmt (v0.11)
  image: hashicorp/terraform:0.11.14
  commands:
  - terraform fmt -check examples/v0.11
---
kind: pipeline
name: build
volumes:
- name: gopath
  temp: {}
steps:
- name: download go modules
  image: golang:1.16.3
  commands:
  - go mod download
  volumes: &volumes
  - name: gopath
    path: /go
- name: golangci-lint
  image: golangci/golangci-lint:v1.31.0-alpine
  commands:
  - cd graylog
  - golangci-lint run
  volumes: *volumes
- name: codecov
  image: golang:1.16.3
  commands:
  # bash and cgo seem to be required
  - bash scripts/codecov_test.sh
  - curl -s https://codecov.io/bash > /tmp/codecov.sh
  - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
  volumes: *volumes
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
- name: remove changes
  image: &image_git plugins/git
  commands:
  # Sometimes it is failed to release by goreleaser due to changes of go.sum
  - git checkout -- .

- name: fetch tags to release
  image: *image_git
  commands:
  - git fetch --tags
  when:
    event:
    - tag
- name: release
  image: goreleaser/goreleaser:v0.145.0
  commands:
  - goreleaser release
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
  volumes: *volumes
  when:
    event:
    - tag

- name: create a dummy tag to test releasing
  image: *image_git
  commands:
  - git tag v0.1.0-alpha
  when:
    event:
    - pull_request
    - push
- name: release (skip-publish)
  image: goreleaser/goreleaser:v0.145.0
  commands:
  - goreleaser release --skip-publish
  volumes: *volumes
  when:
    event:
    - pull_request
    - push
